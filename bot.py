from zenrows import ZenRowsClient
from telegram import Bot
import schedule
import time
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")
CHANNEL_USERNAME = "@top10trendingprojects"
ZENROWS_KEY = "10c4e0d5c0b7bdfe0cc22cabd16fe9a22d62ba94"

bot = Bot(token=BOT_TOKEN)
client = ZenRowsClient(ZENROWS_KEY)

def get_trending_projects():
    url = "https://skynet.certik.com/api/leaderboards/trending"
    params = {
        "js_render": "true",
        "premium_proxy": "true"
    }

    try:
        response = client.get(url, params=params)
        print("üîç ZenRows status:", response.status_code)
        print("üì¶ Response preview:", response.text[:500])

        data = response.json()
        projects = data.get("data", [])[:10]
        print(f"üîé –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(projects)}")

        result = []
        for i, project in enumerate(projects):
            name = project.get("name", "Unknown")
            score = project.get("security_score", "?")
            kyc = "‚úÖ" if project.get("kyc", {}).get("status") == "Approved" else "‚ùå"
            result.append(f"{i+1}. {name} ‚Äì Trust: {score} ‚Äì KYC: {kyc}")

        return "\n".join(result) if result else "‚ö†Ô∏è CertiK –Ω–µ –≤–µ—Ä–Ω—É–ª –ø—Ä–æ–µ–∫—Ç–æ–≤ (–≤—ë—Ä—Å—Ç–∫–∞ –º–æ–≥–ª–∞ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è)."

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return "‚ö†Ô∏è CertiK API –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç."


def send_daily_report():
    print("üì° –ü–æ–ª—É—á–∞—é –ø—Ä–æ–µ–∫—Ç—ã —á–µ—Ä–µ–∑ ZenRows SDK...")
    try:
        message = "üî• *Top 10 Trending Projects on CertiK Skynet:*\n\n" + get_trending_projects()
        bot.send_message(chat_id=CHANNEL_USERNAME, text=message, parse_mode="Markdown")
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
schedule.every().day.at("09:00").do(send_daily_report)

# –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
send_daily_report()

while True:
    schedule.run_pending()
    time.sleep(60)
