import requests
from bs4 import BeautifulSoup
from telegram import Bot
import schedule
import time
import os

BOT_TOKEN = os.environ.get("BOT_TOKEN")
CHANNEL_USERNAME = "@top10trendingprojects"
bot = Bot(token=BOT_TOKEN)

def get_trending_projects():
    url = "https://skynet.certik.com/leaderboards/trending"
    headers = {
        "User-Agent": "Mozilla/5.0",
    }

    try:
        response = requests.get(url, headers=headers)
        print(f"üîç HTML Response status: {response.status_code}")
        soup = BeautifulSoup(response.text, 'html.parser')
        cards = soup.select('div.table-row')
        print(f"üîé –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(cards)}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")
        return "‚ö†Ô∏è CertiK HTML –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å."

    projects = []
    for i, card in enumerate(cards[:10]):
        try:
            name = card.select_one('a').text.strip()
            score_tag = card.select_one('.trust-score')
            score = score_tag.text.strip() if score_tag else "?"
            kyc = "‚úÖ" if 'kyc' in card.text.lower() else "‚ùå"
            projects.append(f"{i+1}. {name} ‚Äì Trust: {score} ‚Äì KYC: {kyc}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ #{i+1}: {e}")
            continue

    if not projects:
        return "‚ö†Ô∏è CertiK –Ω–µ –≤–µ—Ä–Ω—É–ª –ø—Ä–æ–µ–∫—Ç–æ–≤ (–≤—ë—Ä—Å—Ç–∫–∞ –º–æ–≥–ª–∞ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è)."

    return '\n'.join(projects)

def send_daily_report():
    print("üì° –ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤...")
    try:
        message = "üî• *Top 10 Trending Projects on CertiK Skynet:*\n\n" + get_trending_projects()
        bot.send_message(chat_id=CHANNEL_USERNAME, text=message, parse_mode="Markdown")
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚Äî –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00 –ø–æ UTC
schedule.every().day.at("09:00").do(send_daily_report)

# –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –¥–ª—è —Ç–µ—Å—Ç–∞
send_daily_report()

# –¶–∏–∫–ª
while True:
    schedule.run_pending()
    time.sleep(60)
