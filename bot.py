import requests
from telegram import Bot
import schedule
import time
import os

BOT_TOKEN = os.environ.get("BOT_TOKEN")
CHANNEL_USERNAME = "@top10trendingprojects"

bot = Bot(token=BOT_TOKEN)

def get_trending_projects():
    url = "https://skynet.certik.com/api/leaderboards/trending"
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Accept": "application/json"
    }

    try:
        response = requests.get(url, headers=headers)
        print(f"üîç Response status: {response.status_code}")
        print("üìÑ Preview JSON:", response.text[:300])
        data = response.json()
    except Exception as e:
        print(f"‚ùå JSON decode error: {e}")
        return "‚ö†Ô∏è CertiK API –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç."

    projects = []

    for i, project in enumerate(data.get("data", [])[:10]):
        name = project.get("name", "Unknown")
        score = project.get("security_score", "?")
        kyc = "‚úÖ" if project.get("kyc", {}).get("status") == "Approved" else "‚ùå"
        projects.append(f"{i+1}. {name} ‚Äì Trust: {score} ‚Äì KYC: {kyc}")

    if not projects:
        return "‚ö†Ô∏è CertiK API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫."

    return "\n".join(projects)

def send_daily_report():
    print("üì° Fetching CertiK trending projects...")
    try:
        message = "üî• *Top 10 Trending Projects on CertiK Skynet:*\n\n" + get_trending_projects()
        bot.send_message(chat_id=CHANNEL_USERNAME, text=message, parse_mode="Markdown")
        print("‚úÖ Sent to Telegram")
    except Exception as e:
        print(f"‚ùå Failed to send message: {e}")

# –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 09:00 UTC
schedule.every().day.at("09:00").do(send_daily_report)

# –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
send_daily_report()

# –¶–∏–∫–ª
while True:
    schedule.run_pending()
    time.sleep(60)
